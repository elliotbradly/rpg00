export default interface Sprite_UltraHUDComponent_Window {
    bitmap: string;
    width: string;
    height: string;
    opacity: string;
    blendMode: string;
    roundPixels: string;
    anchor: string;
    tint: string;
    texture: string;
    buttonMode: string;
    trackedPointers: string;
    _tempDisplayObjectParent: string;
    x: number;
    y: number;
    worldTransform: string;
    localTransform: string;
    position: string;
    scale: string;
    pivot: string;
    skew: string;
    rotation: string;
    angle: string;
    zIndex: string;
    worldVisible: string;
    mask: string;
    cacheAsBitmap: boolean;
    _events: Events;
    _eventsCount: number;
    tempDisplayObjectParent?: any;
    transform: Events;
    alpha: number;
    visible: boolean;
    renderable: boolean;
    parent: Events;
    worldAlpha: number;
    _lastSortedIndex: number;
    _zIndex: number;
    filterArea?: any;
    filters?: any;
    _enabledFilters?: any;
    _bounds: Events;
    _boundsID: number;
    _lastBoundsID: number;
    _boundsRect?: any;
    _localBoundsRect?: any;
    _mask?: any;
    _destroyed: boolean;
    isSprite: boolean;
    isMask: boolean;
    children: any[];
    sortableChildren: boolean;
    sortDirty: boolean;
    _anchor: Events;
    _texture: Events;
    _width: number;
    _height: number;
    _tint: number;
    _tintRGB: number;
    _blendMode: number;
    shader?: any;
    _cachedTint: number;
    uvs: number[];
    _textureID: number;
    _textureTrimmedID: number;
    vertexData: any[];
    vertexTrimmedData?: any;
    _transformID: number;
    _transformTrimmedID: number;
    indices: number[];
    pluginName: string;
    _roundPixels: boolean;
    spriteId: number;
    _bitmap?: any;
    _frame: Events;
    _hue: number;
    _blendColor: number[];
    _colorTone: number[];
    _colorFilter?: any;
    _hidden: boolean;
    _refreshFrame: boolean;
    _filterBrightness: number;
    _data: Events;
    _hud: Events;
    _multiCondition?: any;
    _animations?: any;
    _forcedVisibility: boolean;
    _baseY: number;
    _windowWidth: number;
    _windowHeight: number;
    _window: Events;
  }

  interface Events {
  }